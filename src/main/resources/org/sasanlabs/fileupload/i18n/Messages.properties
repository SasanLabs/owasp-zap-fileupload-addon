# Options Panel
fileupload.settings.title=File Upload
fileupload.settings.button.reset=Reset
fileupload.settings.urilocator.title=URI Locator
fileupload.settings.urilocator.staticlocation.title=Static Location Configuration
fileupload.settings.urilocator.staticlocation.uriregex=URI Regex

fileupload.settings.urilocator.dynamiclocation.title=Dynamic Location Configuration
fileupload.settings.urilocator.dynamiclocation.uriregex=URI Regex
fileupload.settings.urilocator.parseresponseconfiguration.title=Parse HTTP Response Configuration
fileupload.settings.urilocator.parseresponseconfiguration.startidentifer=Start Identifier
fileupload.settings.urilocator.parseresponseconfiguration.endidentifer=End Identifier

fileupload.settings.alert.invalid.httpresponseparseconfiguration=Both parse HTTP response start and end identifier should be present. 
fileupload.settings.alert.static.dynamicconfiguration.parseconfiguration.present=Static configuration should not be present with dynamic or parse HTTP response configuration. 
fileupload.settings.alert.invalid.dynamicconfiguration.parseidentifier.not.present=Both dynamic configuration and parse HTTP response configuration should be present.

# Alert details
fileupload.alert.attack=Retrieval Request: {0} \n Retrieval Response: {1}
fileupload.configuration.not.present.skipping.scanrule=Configuration for the add-on is not present hence skipping the scan rule.

# FileUpload Scan Rule
fileupload.scanrule.name=File Upload
fileupload.scanrule.description=File Upload scan rule is used to scan the vulnerabilities in the File Upload functionality of web applications.
fileupload.scanrule.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanrule.soln=Follow the suggestions mentioned in following links: \
1. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
2. https://www.youtube.com/watch?v=CmF9sEyKZNo
3. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload

fileupload.scanner.vulnerability.xssHtmlFile.name=Upload and download of html/htm/xhtml or other variants extension file.
fileupload.scanner.vulnerability.xssHtmlFile.description=Html or its variants if rendered in the browser can cause client-side attacks like XSS.
fileupload.scanner.vulnerability.xssHtmlFile.refs=https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload
fileupload.scanner.vulnerability.xssHtmlFile.soln=Follow the suggestions mentioned in following links: \
1. https://wiki.owasp.org/index.php/Testing_for_Stored_Cross_site_scripting_(OTG-INPVAL-002)#:~:text=File%20Upload \
2. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
3. https://www.youtube.com/watch?v=CmF9sEyKZNo \

fileupload.scanner.vulnerability.xssSvgFile.name=Upload and download of svg or other variants extension file.
fileupload.scanner.vulnerability.xssSvgFile.description=svg or its variants if rendered in the browser can cause client-side attacks like XSS.
fileupload.scanner.vulnerability.xssSvgFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.xssSvgFile.soln=Follow the suggestions mentioned in following links: \
1. https://wiki.owasp.org/index.php/Testing_for_Stored_Cross_site_scripting_(OTG-INPVAL-002)#:~:text=File%20Upload \
2. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
3. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
4. https://www.youtube.com/watch?v=CmF9sEyKZNo

fileupload.scanner.vulnerability.rcePhpFile.name=Remote code execution by uploading Php file.
fileupload.scanner.vulnerability.rcePhpFile.description=Php file can be uploaded and executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rcePhpFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rcePhpFile.soln=Follow the suggestions mentioned in following links: \
1. https://www.acunetix.com/websitesecurity/upload-forms-threat/ \
2. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
3. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
4. https://www.youtube.com/watch?v=CmF9sEyKZNo 

fileupload.scanner.vulnerability.rceGifPhpFile.name=Remote code execution by uploading Gif image containing Php content.
fileupload.scanner.vulnerability.rceGifPhpFile.description=Gif file containing Php content can be uploaded and Php code is executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rceGifPhpFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rceGifPhpFile.soln=Follow the suggestions mentioned in following links: \
1. https://www.acunetix.com/websitesecurity/upload-forms-threat/ \
2. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
3. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
4. https://www.youtube.com/watch?v=CmF9sEyKZNo \
5. https://cwe.mitre.org/data/definitions/434.html

fileupload.scanner.vulnerability.rceJpegPhpFile.name=Remote code execution by uploading Jpeg image containing Php content.
fileupload.scanner.vulnerability.rceJpegPhpFile.description=Jpeg file containing Php content can be uploaded and Php code is executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rceJpegPhpFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rceJpegPhpFile.soln=Follow the suggestions mentioned in following links: \
1. https://www.acunetix.com/websitesecurity/upload-forms-threat/ \
2. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
3. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
4. https://www.youtube.com/watch?v=CmF9sEyKZNo \
5. https://cwe.mitre.org/data/definitions/434.html

fileupload.scanner.vulnerability.rceJspFile.name=Remote code execution by uploading Jsp file.
fileupload.scanner.vulnerability.rceJspFile.description=Jsp file can be uploaded and executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rceJspFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rceJspFile.soln=Follow the suggestions mentioned in following links: \
1. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
2. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
3. https://www.youtube.com/watch?v=CmF9sEyKZNo \
4. https://cwe.mitre.org/data/definitions/434.html

fileupload.scanner.vulnerability.rceGifJspFile.name=Remote code execution by uploading Gif image containing Jsp content.
fileupload.scanner.vulnerability.rceGifJspFile.description=Gif file containing Jsp content can be uploaded and Jsp code is executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rceGifJspFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rceGifJspFile.soln=Follow the suggestions mentioned in following links: \
1. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
2. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
3. https://www.youtube.com/watch?v=CmF9sEyKZNo \
4. https://cwe.mitre.org/data/definitions/434.html

fileupload.scanner.vulnerability.rceJpegJspFile.name=Remote code execution by uploading Jpeg image containing Jsp content.
fileupload.scanner.vulnerability.rceJpegJspFile.description=Jpeg file containing Jsp content can be uploaded and Jsp code is executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rceJpegJspFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rceJpegJspFile.soln=Follow the suggestions mentioned in following links: \
1. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
2. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
3. https://www.youtube.com/watch?v=CmF9sEyKZNo \
4. https://cwe.mitre.org/data/definitions/434.html

fileupload.scanner.vulnerability.rceJspxFile.name=Remote code execution by uploading Jspx file.
fileupload.scanner.vulnerability.rceJspxFile.description=Jspx file can be uploaded and executed on server hence server is Vulnerable to Remote code execution vulnerability.
fileupload.scanner.vulnerability.rceJspxFile.refs=https://cwe.mitre.org/data/definitions/434.html
fileupload.scanner.vulnerability.rceJspxFile.soln=Follow the suggestions mentioned in following links: \
1. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
2. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
3. https://www.youtube.com/watch?v=CmF9sEyKZNo \
4. https://cwe.mitre.org/data/definitions/434.html

fileupload.scanner.vulnerability.antiVirusEicarFile.name=Eicar antivirus file upload attack
fileupload.scanner.vulnerability.antiVirusEicarFile.description=Eicar antivirus file was uploaded and downloaded which should be\
detected by the antivirus. This means that either antivirus is not present or antivirus doesn't support Eicar. As per https://www.virustotal.com/ eicar file is supported by 63 Antiviruses out of 67.
fileupload.scanner.vulnerability.antiVirusEicarFile.refs=https://en.wikipedia.org/wiki/EICAR_test_file 
fileupload.scanner.vulnerability.antiVirusEicarFile.soln= Consider checking the antivirus setup in server, in case the antivirus supports Eicar standards and still doesn't report issue, try fixing it.\
https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/10-Business_Logic_Testing/09-Test_Upload_of_Malicious_Files.html#malware

fileupload.scanner.vulnerability.htaccessFile.name=.htaccess file upload attack
fileupload.scanner.vulnerability.htaccessFile.description=.htaccess file was uploaded and when accessed the directory it returned "Index of /" which \
means that .htaccess is effective and it has shown the directory structure. Additionally .htaccess can be used to cause RCE and other vulnerabilities. 
fileupload.scanner.vulnerability.htaccessFile.refs=https://www.acunetix.com/websitesecurity/upload-forms-threat/
fileupload.scanner.vulnerability.htaccessFile.soln=Follow the suggestions mentioned in following links: \
1. https://portswigger.net/kb/issues/00500980_file-upload-functionality \
2. https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload \
3. https://www.youtube.com/watch?v=CmF9sEyKZNo \
4. https://cwe.mitre.org/data/definitions/434.html

fileupload.settings.checkbox.sendrequestsaftervulnerability=Keep exploiting after discovery